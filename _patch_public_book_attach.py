from pathlib import Path
path = Path('app/routes.py')
text = path.read_text(encoding='utf-8')
old = '                try:\n                    stripe.PaymentMethod.attach(pm_id, customer=customer_id)\n                except stripe.error.InvalidRequestError:\n                    pass\n                try:\n                    stripe.Customer.modify(customer_id, invoice_settings={"default_payment_method": pm_id})\n                except Exception:\n                    pass\n                if hasattr(client, "default_payment_method_id"):\n                    client.default_payment_method_id = pm_id\n                    db.session.flush()\n'
new = '                try:\n                    attach_kwargs = {"customer": customer_id}\n                    if acct:\n                        attach_kwargs["stripe_account"] = acct\n                    stripe.PaymentMethod.attach(pm_id, **attach_kwargs)\n                except stripe.error.InvalidRequestError:\n                    pass\n                try:\n                    if acct:\n                        stripe.Customer.modify(\n                            customer_id,\n                            invoice_settings={"default_payment_method": pm_id},\n                            stripe_account=acct,\n                        )\n                    else:\n                        stripe.Customer.modify(\n                            customer_id,\n                            invoice_settings={"default_payment_method": pm_id},\n                        )\n                except Exception:\n                    pass\n                if hasattr(client, "default_payment_method_id"):\n                    client.default_payment_method_id = pm_id\n                    db.session.flush()\n'
if old not in text:
    raise SystemExit('public_book payment method attach block not found')
path.write_text(text.replace(old, new, 1), encoding='utf-8')
